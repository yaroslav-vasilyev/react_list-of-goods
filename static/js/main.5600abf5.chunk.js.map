{"version":3,"sources":["App.tsx","GoodList.tsx","index.tsx"],"names":["SortType","GoodList","goods","map","good","goodsFromServer","App","state","isReversed","sortType","NONE","handleAlphabeticalSort","setState","ALPHABET","handleLengthSort","LENGTH","handleReverse","prevState","handleReset","this","visibleGoods","sort","currentGood","nextGood","localeCompare","length","reverse","getReorderedGoods","resetCondition","className","type","classNames","onClick","React","Component","ReactDOM","render","document","getElementById"],"mappings":"iKAmBKA,E,wGCHUC,EAVmB,SAAC,GAAe,IAAbC,EAAY,EAAZA,MACnC,OACE,6BACGA,EAAMC,KAAI,SAACC,GACV,OAAO,oBAAe,UAAQ,OAAvB,SAA+BA,GAAtBA,SDJXC,EAAkB,CAC7B,YACA,SACA,OACA,YACA,QACA,QACA,OACA,QACA,MACA,W,SAGGL,O,eAAAA,I,uBAAAA,I,oBAAAA,M,KA+CE,IAAMM,EAAb,4MACEC,MAAyB,CACvBC,YAAY,EACZC,SAAUT,EAASU,MAHvB,EAMEC,uBAAyB,WACvB,EAAKC,SAAS,CACZH,SAAUT,EAASa,YARzB,EAYEC,iBAAmB,WACjB,EAAKF,SAAS,CACZH,SAAUT,EAASe,UAdzB,EAkBEC,cAAgB,WACd,EAAKJ,UAAS,SAACK,GAAD,MAAgB,CAC5BT,YAAaS,EAAUT,gBApB7B,EAwBEU,YAAc,WACZ,EAAKN,SAAS,CACZH,SAAUT,EAASU,KACnBF,YAAY,KA3BlB,4CA+BE,WACE,MAAiCW,KAAKZ,MAA9BC,EAAR,EAAQA,WAAYC,EAApB,EAAoBA,SACdP,EApEH,SACLA,EADK,GAGJ,IADCO,EACF,EADEA,SAAUD,EACZ,EADYA,WAGNY,EAAY,YAAOlB,GAEzB,OAAQO,GACN,KAAKT,EAASa,SACZO,EAAaC,MAAK,SAACC,EACjBC,GADgB,OACHD,EAAYE,cAAcD,MACzC,MAEF,KAAKvB,EAASe,OACZK,EAAaC,MAAK,SAACC,EACjBC,GADgB,OACHD,EAAYG,OAASF,EAASE,UAWjD,OAJIjB,GACFY,EAAaM,UAGRN,EA0CSO,CAAkBtB,EAAiB,CAAEG,aAAYC,aACzDmB,EAAiBnB,IAAaT,EAASU,MAAQF,EAErD,OACE,sBAAKqB,UAAU,kBAAf,UACE,sBAAKA,UAAU,UAAf,UACE,wBACEC,KAAK,SACLD,UAAWE,IACT,iBACA,CACE,WAAYtB,IAAaT,EAASa,WAGtCmB,QAASb,KAAKR,uBARhB,iCAaA,wBACEmB,KAAK,SACLD,UAAWE,IACT,oBACA,CACE,WAAYtB,IAAaT,EAASe,SAGtCiB,QAASb,KAAKL,iBARhB,4BAaA,wBACEgB,KAAK,SACLD,UAAWE,IACT,oBACA,CACE,YAAavB,IAGjBwB,QAASb,KAAKH,cARhB,qBAaCY,GAEG,wBACEE,KAAK,SACLD,UAAU,4BACVG,QAASb,KAAKD,YAHhB,sBAUN,6BACE,cAAC,EAAD,CAAUhB,MAAOA,aA3F3B,GAAyB+B,IAAMC,WE/D/BC,IAASC,OACP,cAAC,EAAD,IACAC,SAASC,eAAe,W","file":"static/js/main.5600abf5.chunk.js","sourcesContent":["import React from 'react';\nimport 'bulma/css/bulma.css';\nimport './App.scss';\nimport classNames from 'classnames';\nimport GoodList from './GoodList';\n\nexport const goodsFromServer = [\n  'Dumplings',\n  'Carrot',\n  'Eggs',\n  'Ice cream',\n  'Apple',\n  'Bread',\n  'Fish',\n  'Honey',\n  'Jam',\n  'Garlic',\n];\n\nenum SortType {\n  NONE,\n  ALPHABET,\n  LENGTH,\n}\n\ntype ReorderOptions = {\n  sortType: SortType,\n  isReversed: boolean,\n};\n\n// Use this function in the render method to prepare goods\nexport function getReorderedGoods(\n  goods: string[],\n  { sortType, isReversed }: ReorderOptions,\n) {\n  // To avoid the original array mutation\n  const visibleGoods = [...goods];\n\n  switch (sortType) {\n    case SortType.ALPHABET:\n      visibleGoods.sort((currentGood,\n        nextGood) => currentGood.localeCompare(nextGood));\n      break;\n\n    case SortType.LENGTH:\n      visibleGoods.sort((currentGood,\n        nextGood) => currentGood.length - nextGood.length);\n      break;\n\n    default:\n      break;\n  }\n\n  if (isReversed) {\n    visibleGoods.reverse();\n  }\n\n  return visibleGoods;\n}\n\n// DON'T save goods to the state\ntype State = {\n  isReversed: boolean,\n  sortType: SortType,\n};\n\nexport class App extends React.Component<{}, State> {\n  state: Readonly<State> = {\n    isReversed: false,\n    sortType: SortType.NONE,\n  };\n\n  handleAlphabeticalSort = () => {\n    this.setState({\n      sortType: SortType.ALPHABET,\n    });\n  };\n\n  handleLengthSort = () => {\n    this.setState({\n      sortType: SortType.LENGTH,\n    });\n  };\n\n  handleReverse = () => {\n    this.setState((prevState) => ({\n      isReversed: !prevState.isReversed,\n    }));\n  };\n\n  handleReset = () => {\n    this.setState({\n      sortType: SortType.NONE,\n      isReversed: false,\n    });\n  };\n\n  render() {\n    const { isReversed, sortType } = this.state;\n    const goods = getReorderedGoods(goodsFromServer, { isReversed, sortType });\n    const resetCondition = sortType !== SortType.NONE || isReversed;\n\n    return (\n      <div className=\"section content\">\n        <div className=\"buttons\">\n          <button\n            type=\"button\"\n            className={classNames(\n              'button is-info',\n              {\n                'is-light': sortType !== SortType.ALPHABET,\n              },\n            )}\n            onClick={this.handleAlphabeticalSort}\n          >\n            Sort alphabetically\n          </button>\n\n          <button\n            type=\"button\"\n            className={classNames(\n              'button is-success',\n              {\n                'is-light': sortType !== SortType.LENGTH,\n              },\n            )}\n            onClick={this.handleLengthSort}\n          >\n            Sort by length\n          </button>\n\n          <button\n            type=\"button\"\n            className={classNames(\n              'button is-warning',\n              {\n                'is-light': !isReversed,\n              },\n            )}\n            onClick={this.handleReverse}\n          >\n            Reverse\n          </button>\n\n          {resetCondition\n            && (\n              <button\n                type=\"button\"\n                className=\"button is-danger is-light\"\n                onClick={this.handleReset}\n              >\n                Reset\n              </button>\n            )}\n        </div>\n\n        <ul>\n          <GoodList goods={goods} />\n        </ul>\n      </div>\n    );\n  }\n}\n","import React from 'react';\n\ntype Props = {\n  goods: string[]\n};\n\nconst GoodList: React.FC<Props> = ({ goods }) => {\n  return (\n    <ul>\n      {goods.map((good) => {\n        return <li key={good} data-cy=\"Good\">{good}</li>;\n      })}\n    </ul>\n  );\n};\n\nexport default GoodList;\n","import ReactDOM from 'react-dom';\nimport { App } from './App';\n\nReactDOM.render(\n  <App />,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}